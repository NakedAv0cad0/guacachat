@use "./variables" as *;

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus,
    &:focus-within {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus,
    &:focus-within {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Kitty Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}

// Page content
@mixin page-content($bg-path, $bg-color, $text-width) {
  // check if the %bg-path is equal to null
  @if $bg-path != null {
    background-image: url($bg-path);
  }
  background-size: cover;
  background-position: center center;
  background-color: $bg-color;
  border: 1px solid $green-cyan;
  height: 800px;
  position: relative;
  margin-bottom: 13px;
  width: 100%;
  padding: 10px;
  @media (max-width: 1200px) {
    background-image: none;
  }
  @media (max-width: 567px) {
    height: 780px;
  }
  @media (max-width: 400px) {
    height: 550px;
  }
  .text {
    position: absolute;
    top: 20%;
    left: 5%;
    width: 100%;
    max-width: $text-width;
    display: flex;
    flex-direction: column;
    gap: 30px;
    padding-inline: 15px;
    h1 {
      font-family: $main-font-stack;
      max-width: 470px;
      font-size: 50px;
    }
    p {
      font-weight: 700;
      font-size: 23px;
      line-height: 1.2;
    }
    @media (max-width: 1200px) {
      top: 40%;
      left: 50%;
      transform: translate(-50%, -50%);

      h1,
      p {
        text-align: center;
        margin-inline: auto;
      }
    }
    @media (max-width: 991px) {
      h1 {
        font-size: 40px;
      }
      p {
        font-size: 20px;
      }
    }
    @media (max-width: 767px) {
      gap: 0px;
      h1 {
        font-size: 35px;
      }
      p {
        font-size: 18px;
      }
      h1,
      p {
        max-width: 400px;
      }
    }
  }
}

// handle media query
$screens: (
  "sm": 576px,
  "md": 768px,
  "l": 992px,
  "xl": 1200px,
);

@mixin mq($screen) {
  @if (map-has-key($screens, $screen)) {
    @media (max-width: map-get($screens, $screen)) {
      @content;
    }
  } @else {
    @media (max-width: $screen) {
      @content;
    }
  }
}
